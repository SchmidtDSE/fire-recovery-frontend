name: Deploy to GCS

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  deploy-frontend:
    name: Deploy Static Website to GCS
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-actions-sa@dse-nps.iam.gserviceaccount.com'
          project_id: 'dse-nps'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: 'dse-nps'

      - name: Verify authentication
        run: gcloud auth list

      - name: Set environment variable for branch name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Deploy to GCS
        run: |
          if [ "${{ env.BRANCH_NAME }}" = "main" ]; then
            # Set bucket name for production
            BUCKET_NAME="fire-recovery-frontend-prod"
            
            # Create bucket if it doesn't exist (with website configuration)
            gsutil mb -l us-central1 -b on gs://${BUCKET_NAME} || true
            
            # Set website configuration
            gsutil web set -m index.html -e 404.html gs://${BUCKET_NAME}
            
            # Upload files from src directory
            gsutil -m rsync -r -d src/ gs://${BUCKET_NAME}/
            
            # Make files publicly accessible
            gsutil iam ch allUsers:objectViewer gs://${BUCKET_NAME}
            
            echo "Deployed to https://storage.googleapis.com/${BUCKET_NAME}/index.html"
          fi
          
          if [ "${{ env.BRANCH_NAME }}" = "dev" ]; then
            # Set bucket name for development
            BUCKET_NAME="fire-recovery-frontend-dev"
            
            # Create bucket if it doesn't exist (with website configuration)
            gsutil mb -l us-central1 -b on gs://${BUCKET_NAME} || true
            
            # Set website configuration
            gsutil web set -m index.html -e 404.html gs://${BUCKET_NAME}
            
            # Upload files from src directory
            gsutil -m rsync -r -d src/ gs://${BUCKET_NAME}/
            
            # Make files publicly accessible
            gsutil iam ch allUsers:objectViewer gs://${BUCKET_NAME}
            
            echo "Deployed to https://storage.googleapis.com/${BUCKET_NAME}/index.html"
          fi